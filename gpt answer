Промт для запроса в GPt:

Написать код на Python для предобработки данных с подробной инструкцией для пользователя.

Студент заполняет анкету которая трансформируется в json файл по схеме:  файл «анкета_на_получение_кредита_схема»

После этого на основании данных в анкете делаются запросы в базы: федресурс, объединеное кредитное бюро, и т.д.

Данные из баз приходят в формате json с схемой любого уровня вложенности, где могут изменяться  порядок и состав данных.
Примеры получаемых файлов: «ресурс_комитета_по_образованию_схема»,  «объединенное_кредитное_бюро_схема», «федресурс_схема»

На Выходе необходимо получить данные в виде json файла для последующей генерации классов вызова модели (Java, Kotlin, Groovy, Go), с заполненными соответствующими полями. Файл: «модель_схема»

Задачи которые должны решаться с помощью кода:
* решать интеграционные задачи силами “гражданских” разработчиков (системный аналитик, Риск-технолог и так далее);
* упростить производственный процесс для задач добавления новых источников данных на модели, изменения контрактов существующих.
* предусмотреть интеллектуальный режим отладки.

Ответ:

На основе предоставленных файлов будет разработан Python-скрипт, который выполняет следующие шаги:

1. Чтение и валидация данных из анкеты на основе схемы из файла анкета_на_получение_кредита_схема.
2. Запросы к внешним источникам данных: объединенное кредитное бюро, федресурс и др., представленных в файлах.
3. Нормализация и преобразование данных из внешних источников для согласования структуры с файлом модель_схема.
4. Генерация итогового JSON-файла, который будет использоваться для последующего создания классов в различных языках программирования.

Я разверну пошаговую структуру кода с объяснением, а затем создадим и запустим скрипт.

### Основные шаги:
1. Чтение JSON файлов (анкеты и внешних ресурсов).
2. Проверка соответствия данных анкеты схеме.
3. Унификация и нормализация JSON данных из внешних источников.
4. Объединение всех данных в итоговый JSON файл в структуре, соответствующей `модель_схема`.

### Начнем с разработки скрипта.

Вот пошаговый Python-скрипт, который:

1. Читает файл анкеты на получение кредита.
2. Загружает и валидирует данные на соответствие схеме анкеты.
3. Читает JSON-файлы из внешних ресурсов (например, объединенное кредитное бюро и другие).
4. Приводит данные к единому формату на основе файла модели.
5. Создает итоговый JSON-файл для последующей генерации классов.

### Инструкция для пользователя:

1. Разместите JSON-файлы:
   - Анкету клиента в формате JSON (`анкета_на_получение_кредита_схема`).
   - Внешние данные от различных источников (`объединенное_кредитное_бюро_схема`, и т.д.).
   - Схему модели для унификации (`модель_схема`).

2. Запустите скрипт, убедившись, что Python установлен.

3. Отладка: скрипт выведет ошибки при валидации или чтении данных. Убедитесь, что структура файлов соответствует ожиданиям.

4. Выходные данные будут сохранены в файл итоговая_модель.json для последующего использования в генерации классов.